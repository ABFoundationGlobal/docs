@use "sass:color";
@use "sass:map";

// Create a file `theme_base.scss` to override settings

/* Infima UI */
:root {
  --ifm-color-primary: #{map.get($light-theme, "color-primary")};
  --site-color-primary-rgb: #{color.channel(map.get($light-theme, "color-primary"), "red", $space: rgb),
    color.channel(map.get($light-theme, "color-primary"), "green", $space: rgb),
    color.channel(map.get($light-theme, "color-primary"), "blue", $space: rgb)};

  --ifm-color-primary-dark: #{map.get($light-theme, "color-primary-dark")};
  --site-color-primary-dark-rgb: #{color.channel(map.get($light-theme, "color-primary-dark"), "red", $space: rgb),
    color.channel(map.get($light-theme, "color-primary-dark"), "green", $space: rgb),
    color.channel(map.get($light-theme, "color-primary-dark"), "blue", $space: rgb)};

  --ifm-color-primary-darker: #{map.get($light-theme, "color-primary-darker")};
  --site-color-primary-darker-rgb: #{color.channel(map.get($light-theme, "color-primary-darker"), "red", $space: rgb),
    color.channel(map.get($light-theme, "color-primary-darker"), "green", $space: rgb),
    color.channel(map.get($light-theme, "color-primary-darker"), "blue", $space: rgb)};

  --ifm-color-primary-darkest: #{map.get($light-theme, "color-primary-darkest")};
  --site-color-primary-darkest-rgb: #{color.channel(map.get($light-theme, "color-primary-darkest"), "red", $space: rgb),
    color.channel(map.get($light-theme, "color-primary-darkest"), "green", $space: rgb),
    color.channel(map.get($light-theme, "color-primary-darkest"), "blue", $space: rgb)};

  --ifm-color-primary-light: #{map.get($light-theme, "color-primary-light")};
  --site-color-primary-light-rgb: #{color.channel(map.get($light-theme, "color-primary-light"), "red", $space: rgb),
    color.channel(map.get($light-theme, "color-primary-light"), "green", $space: rgb),
    color.channel(map.get($light-theme, "color-primary-light"), "blue", $space: rgb)};

  --ifm-color-primary-lighter: #{map.get($light-theme, "color-primary-lighter")};
  --site-color-primary-lighter-rgb: #{color.channel(map.get($light-theme, "color-primary-lighter"), "red", $space: rgb),
    color.channel(map.get($light-theme, "color-primary-lighter"), "green", $space: rgb),
    color.channel(map.get($light-theme, "color-primary-lighter"), "blue", $space: rgb)};

  --ifm-color-primary-lightest: #{map.get($light-theme, "color-primary-lightest")};
  --site-color-primary-lightest-rgb: #{color.channel(map.get($light-theme, "color-primary-lightest"), "red", $space: rgb),
    color.channel(map.get($light-theme, "color-primary-lightest"), "green", $space: rgb),
    color.channel(map.get($light-theme, "color-primary-lightest"), "blue", $space: rgb)};

  --ifm-link-color: var(--ifm-color-primary);

  --ifm-background-color: #{map.get($light-theme, "color-background")};

  --ifm-navbar-background-color: #{map.get($light-theme, "navbar-background-color")};
}

[data-theme="dark"] {
  --ifm-color-primary: #{map.get($dark-theme, "color-primary")};
  --site-color-primary-rgb: #{color.channel(map.get($dark-theme, "color-primary"), "red", $space: rgb),
    color.channel(map.get($dark-theme, "color-primary"), "green", $space: rgb),
    color.channel(map.get($dark-theme, "color-primary"), "blue", $space: rgb)};

  --ifm-color-primary-dark: #{map.get($dark-theme, "color-primary-dark")};
  --site-color-primary-dark-rgb: #{color.channel(map.get($dark-theme, "color-primary-dark"), "red", $space: rgb),
    color.channel(map.get($dark-theme, "color-primary-dark"), "green", $space: rgb),
    color.channel(map.get($dark-theme, "color-primary-dark"), "blue", $space: rgb)};

  --ifm-color-primary-darker: #{map.get($dark-theme, "color-primary-darker")};
  --site-color-primary-darker-rgb: #{color.channel(map.get($dark-theme, "color-primary-darker"), "red", $space: rgb),
    color.channel(map.get($dark-theme, "color-primary-darker"), "green", $space: rgb),
    color.channel(map.get($dark-theme, "color-primary-darker"), "blue", $space: rgb)};

  --ifm-color-primary-darkest: #{map.get($dark-theme, "color-primary-darkest")};
  --site-color-primary-darkest-rgb: #{color.channel(map.get($dark-theme, "color-primary-darkest"), "red", $space: rgb),
    color.channel(map.get($dark-theme, "color-primary-darkest"), "green", $space: rgb),
    color.channel(map.get($dark-theme, "color-primary-darkest"), "blue", $space: rgb)};

  --ifm-color-primary-light: #{map.get($dark-theme, "color-primary-light")};
  --site-color-primary-light-rgb: #{color.channel(map.get($dark-theme, "color-primary-light"), "red", $space: rgb),
    color.channel(map.get($dark-theme, "color-primary-light"), "green", $space: rgb),
    color.channel(map.get($dark-theme, "color-primary-light"), "blue", $space: rgb)};

  --ifm-color-primary-lighter: #{map.get($dark-theme, "color-primary-lighter")};
  --site-color-primary-lighter-rgb: #{color.channel(map.get($dark-theme, "color-primary-lighter"), "red", $space: rgb),
    color.channel(map.get($dark-theme, "color-primary-lighter"), "green", $space: rgb),
    color.channel(map.get($dark-theme, "color-primary-lighter"), "blue", $space: rgb)};

  --ifm-color-primary-lightest: #{map.get($dark-theme, "color-primary-lightest")};
  --site-color-primary-lightest-rgb: #{color.channel(map.get($dark-theme, "color-primary-lightest"), "red", $space: rgb),
    color.channel(map.get($dark-theme, "color-primary-lightest"), "green", $space: rgb),
    color.channel(map.get($dark-theme, "color-primary-lightest"), "blue", $space: rgb)};

  --ifm-link-color: var(--ifm-color-primary);

  --ifm-background-color: #{map.get($dark-theme, "color-background")};

  --ifm-navbar-background-color: #{map.get($dark-theme, "navbar-background-color")};
}

/**
 * Search Component UI Override
 * autocomplete-theme-classic
 * https://www.algolia.com/doc/ui-libraries/autocomplete/api-reference/autocomplete-theme-classic/
 */
:root,
[data-theme="dark"] {
  --aa-primary-color-rgb: var(--site-color-primary-rgb) !important;
  --aa-muted-color-rgb: var(--site-color-primary-dark-rgb) !important;
  --aa-muted-color-alpha: 0.5 !important;
  // --aa-panel-border-color-rgb: 33, 175, 144 !important;
  --aa-input-border-color-rgb: var(--site-color-primary-dark-rgb) !important;
  --aa-selected-color-rgb: var(--site-color-primary-dark-rgb) !important;
  --aa-description-highlight-background-color-rgb: var(
    --site-color-primary-darker-rgb
  ) !important;
  --aa-description-highlight-background-color-alpha: 0.1 !important;
  --aa-panel-shadow: none !important;
}

.aa-DetachedSearchButton {
  border-radius: 9999px !important;
  border-color: rgba(var(--aa-input-border-color-rgb), 0.2) !important;
  &:hover {
    border-color: rgba(var(--aa-input-border-color-rgb), 1) !important;
  }
}

:root {
  // Overlay
  --aa-overlay-color-rgb: 0, 0, 0 !important;
  --aa-overlay-color-alpha: 0.5 !important;
}

[data-theme="dark"] {
  --aa-background-color-rgb: 25, 25, 25 !important;
  --aa-input-background-color-rgb: 25, 25, 25 !important;
  --aa-input-background-color-alpha: 0.1 !important;
  // Overlay
  --aa-overlay-color-rgb: 47, 55, 69 !important;
  --aa-overlay-color-alpha: 0.75 !important;
}

// Code Block
:root {
  --ifm-code-font-size: 95%;
}

// Code Highlight-line
.docusaurus-highlight-code-line {
  background-color: rgba(255, 255, 255, 0.1);
  display: block;
  margin: 0 calc(-1 * var(--ifm-pre-padding));
  padding: 0 var(--ifm-pre-padding);
}

[data-theme="dark"] .docusaurus-highlight-code-line {
  background-color: rgba(0, 0, 0, 0.3);
}